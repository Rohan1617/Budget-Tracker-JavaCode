package productmanagement;

public class Product {
	static int idGenerator=1000;
	int id;
	String name;
	int price;
	
	Product(String name,int price){
		this.name=name;
		this.price=price;
		this.id=idGenerator++;
	}

	public static int getIdGenerator() {
		return idGenerator;
	}

	public static void setIdGenerator(int idGenerator) {
		Product.idGenerator = idGenerator;
	}

	public int getId() {
		return id;
	}

	public void setId(int id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public int getPrice() {
		return price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	@Override
	public String toString() {
		return "Product [id=" + id + ", name=" + name + ", price=" + price + "]";
	}
	
	
}
---------------------
package productmanagement;

import java.util.ArrayList;

public class Customer {
static int idGenerator=2000;
int id;
String name;
long contactNo;
ArrayList<Product>products;
public Customer(String name, long contactNo) {
	super();
	this.name = name;
	this.contactNo = contactNo;
	this.id=idGenerator++;
	products=new ArrayList<Product>();
}
public void addProduct(Product p) {
	products.add(p);
	System.out.println("product with product id: "+p.getId()+" added successfully");
}
public void removeProduct(int id) {
	for(Product p:products) {
		if(p.getId()==id) {
			products.remove(p);
			System.out.println(p+" removed successfully");
			return;
		}
	}
	System.out.println("Product not found with id: "+id);
}
public void displayAllProducts() {
	for(Product p:products) {
		System.out.println(p);
	}
}
public int calBill() {
	int tot=0;
	for(Product p:products) {
		tot+=p.getPrice();
	}
	return tot;
}
@Override
public String toString() {
	return "Customer [id=" + id + ", name=" + name + ", contactNo=" + contactNo + ", products=" + products + "]";
}
public int getId() {
	return id;
}
public void setId(int id) {
	this.id = id;
}
public String getName() {
	return name;
}
public void setName(String name) {
	this.name = name;
}
public long getContactNo() {
	return contactNo;
}
public void setContactNo(long contactNo) {
	this.contactNo = contactNo;
}

}
------------------------
package productmanagement;

import java.time.LocalDateTime;

public class Transaction {
	static int idGenerator=2000;
	int id;
	int custId;
	int productId;
	String status;
	LocalDateTime time;
	public Transaction(int custId, int productId, String status) {
		super();
		this.id=idGenerator++;
		this.custId = custId;
		this.productId = productId;
		this.status=status;
		this.time = time.now();
	}
	@Override
	public String toString() {
		return "Transaction [id=" + id + ", custId=" + custId + ", productId=" + productId + ", status=" + status
				+ ", time=" + time + "]";
	}
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public int getCustId() {
		return custId;
	}
	public void setCustId(int custId) {
		this.custId = custId;
	}
	public int getProductId() {
		return productId;
	}
	public void setProductId(int productId) {
		this.productId = productId;
	}
	public String getStatus() {
		return status;
	}
	public void setStatus(String status) {
		this.status = status;
	}
	public LocalDateTime getTime() {
		return time;
	}
	public void setTime(LocalDateTime time) {
		this.time = time;
	}
	
}
------------------------
package productmanagement;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.ArrayList;

public class Shop {
ArrayList<Product>products=new ArrayList<Product>();
ArrayList<Customer>customers=new ArrayList<Customer>();
ArrayList<Transaction>transactions=new ArrayList<Transaction>();
final String path="./src/resources/file1.txt";
public void logTransaction(String msg) {
	try {
		FileOutputStream fout=new FileOutputStream(path,true);
		byte arr[]=msg.getBytes();
		fout.write(arr);
	} catch (Exception e) {
		System.out.println(e.getMessage());
	}
}
public void recordPurchase(int custId,int productId) {
	Transaction tx=new Transaction(custId, productId, "Purchase");
	System.out.println("Customer with customer id: "+custId+" purchased product with product id: "+productId);
	String msg="Customer with customer id: "+custId+" purchased product with product id: "+productId;
	logTransaction(msg);
}
public void recordReturn(int custId,int productId) {
	Transaction tx=new Transaction(custId, productId, "Returned");
	System.out.println("Customer with customer id: "+custId+" returned product with product id: "+productId);
	String msg="Customer with customer id: "+custId+" returned product with product id: "+productId;
	logTransaction(msg);
}
public Customer getCustomerById(int id) {
	for(Customer c:customers) {
		if(c.getId()==id) {
			return c;
		}
	}
	return null;
}
public Product getProductById(int id) {
	for(Product p:products) {
		if(p.getId()==id) {
			return p;
		}
	}
	return null;
}
public void doPurchase(int custId,int productId) {
	for(Product p:products) {
		if(p.getId()==productId) {
			products.remove(p);
			Customer c=getCustomerById(custId);
			c.addProduct(p);
			recordPurchase(custId, productId);
			Transaction tx=new Transaction(custId, productId, "Purchase");
			transactions.add(tx);
			return;
		}
	}
	System.out.println("Product not found..");
}

public void getReturn(int custId,int productId) {
	for(Product p:products) {
		if(p.getId()==productId) {
			products.add(p);
			Customer c=getCustomerById(custId);
			c.removeProduct(productId);
			recordReturn(custId, productId);
			Transaction tx=new Transaction(custId, productId,"Returned");
			transactions.add(tx);
			return;
		}
	}
	System.out.println("not found");
}
public void addProduct(Product p) {
	products.add(p);
	System.out.println("Product with product id:"+p.getId()+" added succcessfully");
}
public void removeProduct(int pid) {
	for(Product p:products) {
		if(p.getId()==pid) {
			products.remove(p);
		}
	}
}
public void addCustomer(Customer c) {
	customers.add(c);
	System.out.println("Customer with customer id: "+c.getId()+" added successfully");
}
public void removeCustomer(int id) {
	for(Customer c:customers) {
		if(c.getId()==id) {
			customers.remove(c);
			System.out.println("Customer removed succssfully with id: "+c.getId());
			return;
		}
	}
	System.out.println("Customer not found");
}
public void displayAllCustomers() {
	for(Customer c:customers) {
		System.out.println(c);
	}
}
public void displayAllProducts() {
	for(Product p:products) {
		System.out.println(p);
	}
}
public int calBill(int id) {
	int tot=0;
	for(Customer c:customers) {
		if(c.getId()==id) {
			tot=c.calBill();
			return tot;
		}
	}
	return tot;
}
}
--------------------
package productmanagement;

import java.util.Scanner;

public class Tester {

	public static void main(String[] args) {
		Shop s=new Shop();
		int ch=0;
		Scanner sc=new Scanner(System.in);
		do {
			System.out.println("""
					1.add customer
					2.add product
					3.display product
					4.display customer
					5.remove customer
					6.purchase
					7.return
					8.calculate bill
					9.exit shop
					""");
			System.out.println("\n Enter choice");
			ch=sc.nextInt();
			switch(ch) {
			case 1:
				System.out.println("Enter name");
				String name=sc.next();
				System.out.println("Enter contact number");
				long cont=sc.nextLong();
				Customer c=new Customer(name, cont);
				s.addCustomer(c);
				break;
			case 2:
				System.out.println("Enter product name");
				String pr=sc.next();
				System.out.println("Enter product price");
				int price=sc.nextInt();
				Product p=new Product(pr, price);
				s.addProduct(p);
				break;
			case 3:
				s.displayAllProducts();
				break;
			case 4:
				s.displayAllCustomers();
				break;
			case 5:
				System.out.println("Enter customer id");
				int custId=sc.nextInt();
				s.removeCustomer(custId);
				break;
			case 6:
				System.out.println("Enter customer id");
				int cid=sc.nextInt();
				System.out.println("Enter product id:");
				int pid=sc.nextInt();
				s.recordPurchase(cid, pid);
				break;
			case 7:
				System.out.println("Enter customer id");
				int cid1=sc.nextInt();
				System.out.println("Enter product id:");
				int pid1=sc.nextInt();
				s.recordReturn(cid1, pid1);
				break;
			case 8:
				System.out.println("Enter customer id:");
				int c1=sc.nextInt();
				System.out.println( s.calBill(c1));
				break;
			case 9:
				System.out.println("Exiting..");
				break;
				default:
					System.out.println("Enter valid choice");
					break;
			}
		}while(ch!=9);
	}

}
